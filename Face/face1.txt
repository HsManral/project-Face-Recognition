#for Collecting Face Samples Through which we trained model
import cv2
import numpy as numpy
import sys

face_classfier = cv2.CascadeClassifier('E:\\face_Recognition\\data\\haarcascade_frontalface_default.xml') # Thing on Screen is Face or not


def face_extractor(img):

	gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
	faces = face_classfier.detectMultiScale(gray,1.3,5)


	if faces is(): # if Face is Not There
		return None
	for(x,y,w,h) in faces : # Changes in Face
		cropped_face = img[y:y+h, x:x+w] #list h(rows) w(column) 

	return cropped_face

cap = cv2.VideoCapture(0) # Configure Camera 0 for by default
count = 0 # to Count Photos

while True:
	ret, frame = cap.read() #read Frame
	if face_extractor(frame) is not None:
		count += 1
		face = cv2.resize(face_extractor(frame), (200,200))# Size of Frame Pixels
		face = cv2.cvtColor(face, cv2.COLOR_BGR2GRAY) # Change/Convert Faces

		file_name_path = 'E:\\face_Recognition\\Faces\\'+str(count)+'.jpg' # Stored Faces 
		cv2.imwrite(file_name_path, face) # write/Save Image

		cv2.putText(face,str(count),(50,50), cv2.FONT_HERSHEY_COMPLEX,1,(0,255,0),2)
		cv2.imshow('Face Cropper', face) # Show Faces

	else:
		print("Face Not Found")
		pass 

	if cv2.waitKey(1)==13 or count == 100:
		break

cap.release()  # Release Camera
cv2.destroyAllWindow()
print("Collecting Sample Complete  !!!!!")